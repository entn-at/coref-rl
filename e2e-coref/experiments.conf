# Word embeddings.
glove_300d {
  path = glove.840B.300d.txt
  size = 300
}
glove_300d_filtered_onto {
  path = ./ontonotes/glove.840B.300d.txt.filtered
  size = 300
}
glove_300d_filtered_wikicoref {
  path = ./wikicoref/glove.840B.300d.txt.filtered
  size = 300
}
glove_300d_wiki_sum {
  path = ./ontowiki/combined.summaries.glove.txt.filtered
  size = 300
}
glove_300d_2w {
  path = glove_50_300_2.txt
  size = 300
}

# Distributed training configurations.
two_local_gpus {
  addresses {
    ps = [localhost:2222]
    worker = [localhost:2223, localhost:2224]
  }
  gpus = [0, 1]
}

# Main configuration.
best {
  # Computation limits.
  max_top_antecedents = 50
  max_training_sentences = 50
  top_span_ratio = 0.4

  # Model hyperparameters.
  filter_widths = [3, 4, 5]
  filter_size = 50
  char_embedding_size = 8
  char_vocab_path = ./ontonotes/char_vocab.english.txt
  context_embeddings = ${glove_300d_filtered_onto}
  head_embeddings = ${glove_300d_2w}
  contextualization_size = 200
  contextualization_layers = 3
  ffnn_size = 150
  ffnn_depth = 2
  feature_size = 20
  max_span_width = 30
  use_metadata = true
  use_features = true
  model_heads = true
  coref_depth = 2
  lm_layers = 3
  lm_size = 1024
  coarse_to_fine = true

  # Learning hyperparameters.
  max_gradient_norm = 5.0
  lstm_dropout_rate = 0.4
  lexical_dropout_rate = 0.5
  dropout_rate = 0.2
  optimizer = adam
  learning_rate = 0.001
  decay_rate = 0.999
  decay_frequency = 100

  # Other.
  train_path = ./ontonotes/train.english.jsonlines
  eval_path = ./ontonotes/dev.english.jsonlines
  conll_eval_path = ./ontonotes/dev.english.v4_gold_conll
  lm_path = ./ontonotes/elmo_cache.hdf5
  genres = ["bc", "bn", "mz", "nw", "pt", "tc", "wb"]
  eval_frequency = 5000
  report_frequency = 100
  log_root = logs
  cluster = ${two_local_gpus}
  loss = mle
}

# For evaluation. Do not use for training (i.e. only for predict.py, evaluate.py, and demo.py). Rename `best` directory to `final`.
final = ${best} {
  context_embeddings = ${glove_300d_filtered_onto}
  head_embeddings = ${glove_300d_2w}
  eval_path = ./ontonotes/test.english.jsonlines
  conll_eval_path = ./ontonotes/test.english.v4_gold_conll
  distill = false
  is_conll = true
}

final-wikicoref = ${final} {
  context_embeddings = ${glove_300d_filtered_wikicoref}
  eval_path = ./wikicoref/test.jsonlines
  conll_eval_path = ./wikicoref/test.conll
  distill = false
  is_conll = false
}

rl_sum = ${best} {
  max_top_antecedents = 50
  context_embeddings = ${glove_300d_wiki_sum}
  head_embeddings = ${glove_300d_2w}
  lm_path = ./ontowiki/elmo_cache_combined_pruned_summaries.hdf5
  train_path = ./wikidata/wiki_10k_summaries_pruned.jsonlines
  eval_path = ./ontonotes/dev.english.jsonlines
  decay_frequency = 500
  eval_frequency = 5
  report_frequency = 5
  patience = 2
  distill = false
  is_conll = true
  loss = rl
}

kg-us = ${rl_sum} {
  reward_model = wiki_gold_1M
}
text-us = ${rl_sum} {
  reward_model = openie_50k_docs
}
joint-us = ${rl_sum} {
  reward_model = gold_openie_50k_docs_balanced
}
combined-us = ${rl_sum} {
  reward_model = all
}
multitask-rl = ${rl_sum} {
  reward_model = unified
  distill = true
}
kg-us-wikicoref = ${kg-us} {
  context_embeddings = ${glove_300d_filtered_wikicoref}
  lm_path = ./wikicoref/elmo_cache_wikicoref.hdf5
  eval_path = ./wikicoref/dev.jsonlines
  conll_eval_path = ./wikicoref/dev.conll
  is_conll = false
  patience = 5
}
text-us-wikicoref = ${text-us} {
  context_embeddings = ${glove_300d_filtered_wikicoref}
  lm_path = ./wikicoref/elmo_cache_wikicoref.hdf5
  eval_path = ./wikicoref/dev.jsonlines
  conll_eval_path = ./wikicoref/dev.conll
  is_conll = false
  patience = 5
}
joint-us-wikicoref = ${joint-us} {
  context_embeddings = ${glove_300d_filtered_wikicoref}
  lm_path = ./wikicoref/elmo_cache_wikicoref.hdf5
  eval_path = ./wikicoref/dev.jsonlines
  conll_eval_path = ./wikicoref/dev.conll
  is_conll = false
  patience = 5
}
multitask-rl-wikicoref = ${multitask-rl} {
  context_embeddings = ${glove_300d_filtered_wikicoref}
  lm_path = ./wikicoref/elmo_cache_wikicoref.hdf5
  eval_path = ./wikicoref/dev.jsonlines
  conll_eval_path = ./wikicoref/dev.conll
  is_conll = false
  patience = 5
  distill = true
}

# Baselines.
c2f_100_ant = ${best} {
  max_top_antecedents = 100
}
c2f_250_ant = ${best} {
  max_top_antecedents = 250
}
c2f_1_layer = ${best} {
  coref_depth = 1
}
c2f_3_layer = ${best} {
  coref_depth = 3
}
distance_50_ant = ${best} {
  max_top_antecedents = 50
  coarse_to_fine = false
  coref_depth = 1
}
distance_100_ant = ${distance_50_ant} {
  max_top_antecedents = 100
}
distance_250_ant = ${distance_50_ant} {
  max_top_antecedents = 250
}
